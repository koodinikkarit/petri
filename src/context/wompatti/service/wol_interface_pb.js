/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.WompattiService.CreateWolInterfaceRequest', null, global);
goog.exportSymbol('proto.WompattiService.CreateWolInterfaceResponse', null, global);
goog.exportSymbol('proto.WompattiService.CreateWolInterfaceResponse.State', null, global);
goog.exportSymbol('proto.WompattiService.EditWolInterfaceRequest', null, global);
goog.exportSymbol('proto.WompattiService.EditWolInterfaceResponse', null, global);
goog.exportSymbol('proto.WompattiService.EditWolInterfaceResponse.State', null, global);
goog.exportSymbol('proto.WompattiService.ExecuteWolInterfaceRequest', null, global);
goog.exportSymbol('proto.WompattiService.ExecuteWolInterfaceResponse', null, global);
goog.exportSymbol('proto.WompattiService.ExecuteWolInterfaceResponse.State', null, global);
goog.exportSymbol('proto.WompattiService.FetchWolInterfaceByIdRequest', null, global);
goog.exportSymbol('proto.WompattiService.FetchWolInterfaceByIdResponse', null, global);
goog.exportSymbol('proto.WompattiService.FetchWolInterfaceByIdResponse.State', null, global);
goog.exportSymbol('proto.WompattiService.RemoveWolInterfaceRequest', null, global);
goog.exportSymbol('proto.WompattiService.RemoveWolInterfaceResponse', null, global);
goog.exportSymbol('proto.WompattiService.RemoveWolInterfaceResponse.State', null, global);
goog.exportSymbol('proto.WompattiService.WolInterface', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.WompattiService.WolInterface = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.WompattiService.WolInterface, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.WompattiService.WolInterface.displayName = 'proto.WompattiService.WolInterface';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.WompattiService.WolInterface.prototype.toObject = function(opt_includeInstance) {
  return proto.WompattiService.WolInterface.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.WompattiService.WolInterface} msg The msg instance to transform.
 * @return {!Object}
 */
proto.WompattiService.WolInterface.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ethernetinterfaceid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    mac: msg.getMac_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.WompattiService.WolInterface}
 */
proto.WompattiService.WolInterface.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.WompattiService.WolInterface;
  return proto.WompattiService.WolInterface.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.WompattiService.WolInterface} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.WompattiService.WolInterface}
 */
proto.WompattiService.WolInterface.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEthernetinterfaceid(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMac(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.WompattiService.WolInterface.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.WompattiService.WolInterface.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.WompattiService.WolInterface} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.WompattiService.WolInterface.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getEthernetinterfaceid();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMac_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.WompattiService.WolInterface.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.WompattiService.WolInterface.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 ethernetInterfaceId = 2;
 * @return {number}
 */
proto.WompattiService.WolInterface.prototype.getEthernetinterfaceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.WompattiService.WolInterface.prototype.setEthernetinterfaceid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bytes mac = 3;
 * @return {!(string|Uint8Array)}
 */
proto.WompattiService.WolInterface.prototype.getMac = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes mac = 3;
 * This is a type-conversion wrapper around `getMac()`
 * @return {string}
 */
proto.WompattiService.WolInterface.prototype.getMac_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMac()));
};


/**
 * optional bytes mac = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMac()`
 * @return {!Uint8Array}
 */
proto.WompattiService.WolInterface.prototype.getMac_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMac()));
};


/** @param {!(string|Uint8Array)} value */
proto.WompattiService.WolInterface.prototype.setMac = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.WompattiService.CreateWolInterfaceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.WompattiService.CreateWolInterfaceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.WompattiService.CreateWolInterfaceRequest.displayName = 'proto.WompattiService.CreateWolInterfaceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.WompattiService.CreateWolInterfaceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.WompattiService.CreateWolInterfaceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.WompattiService.CreateWolInterfaceRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.WompattiService.CreateWolInterfaceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    computerid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ethernetinterfaceid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    mac: msg.getMac_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.WompattiService.CreateWolInterfaceRequest}
 */
proto.WompattiService.CreateWolInterfaceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.WompattiService.CreateWolInterfaceRequest;
  return proto.WompattiService.CreateWolInterfaceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.WompattiService.CreateWolInterfaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.WompattiService.CreateWolInterfaceRequest}
 */
proto.WompattiService.CreateWolInterfaceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setComputerid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEthernetinterfaceid(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMac(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.WompattiService.CreateWolInterfaceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.WompattiService.CreateWolInterfaceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.WompattiService.CreateWolInterfaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.WompattiService.CreateWolInterfaceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getComputerid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getEthernetinterfaceid();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMac_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional uint32 computerId = 1;
 * @return {number}
 */
proto.WompattiService.CreateWolInterfaceRequest.prototype.getComputerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.WompattiService.CreateWolInterfaceRequest.prototype.setComputerid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 ethernetInterfaceId = 2;
 * @return {number}
 */
proto.WompattiService.CreateWolInterfaceRequest.prototype.getEthernetinterfaceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.WompattiService.CreateWolInterfaceRequest.prototype.setEthernetinterfaceid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bytes mac = 3;
 * @return {!(string|Uint8Array)}
 */
proto.WompattiService.CreateWolInterfaceRequest.prototype.getMac = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes mac = 3;
 * This is a type-conversion wrapper around `getMac()`
 * @return {string}
 */
proto.WompattiService.CreateWolInterfaceRequest.prototype.getMac_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMac()));
};


/**
 * optional bytes mac = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMac()`
 * @return {!Uint8Array}
 */
proto.WompattiService.CreateWolInterfaceRequest.prototype.getMac_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMac()));
};


/** @param {!(string|Uint8Array)} value */
proto.WompattiService.CreateWolInterfaceRequest.prototype.setMac = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.WompattiService.CreateWolInterfaceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.WompattiService.CreateWolInterfaceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.WompattiService.CreateWolInterfaceResponse.displayName = 'proto.WompattiService.CreateWolInterfaceResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.WompattiService.CreateWolInterfaceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.WompattiService.CreateWolInterfaceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.WompattiService.CreateWolInterfaceResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.WompattiService.CreateWolInterfaceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0),
    wolinterface: (f = msg.getWolinterface()) && proto.WompattiService.WolInterface.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.WompattiService.CreateWolInterfaceResponse}
 */
proto.WompattiService.CreateWolInterfaceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.WompattiService.CreateWolInterfaceResponse;
  return proto.WompattiService.CreateWolInterfaceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.WompattiService.CreateWolInterfaceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.WompattiService.CreateWolInterfaceResponse}
 */
proto.WompattiService.CreateWolInterfaceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.WompattiService.CreateWolInterfaceResponse.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = new proto.WompattiService.WolInterface;
      reader.readMessage(value,proto.WompattiService.WolInterface.deserializeBinaryFromReader);
      msg.setWolinterface(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.WompattiService.CreateWolInterfaceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.WompattiService.CreateWolInterfaceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.WompattiService.CreateWolInterfaceResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.WompattiService.CreateWolInterfaceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getWolinterface();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.WompattiService.WolInterface.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.WompattiService.CreateWolInterfaceResponse.State = {
  SUCCESS: 0,
  NOT_FOUND: 1
};

/**
 * optional State state = 1;
 * @return {!proto.WompattiService.CreateWolInterfaceResponse.State}
 */
proto.WompattiService.CreateWolInterfaceResponse.prototype.getState = function() {
  return /** @type {!proto.WompattiService.CreateWolInterfaceResponse.State} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.WompattiService.CreateWolInterfaceResponse.State} value */
proto.WompattiService.CreateWolInterfaceResponse.prototype.setState = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional WolInterface wolInterface = 2;
 * @return {?proto.WompattiService.WolInterface}
 */
proto.WompattiService.CreateWolInterfaceResponse.prototype.getWolinterface = function() {
  return /** @type{?proto.WompattiService.WolInterface} */ (
    jspb.Message.getWrapperField(this, proto.WompattiService.WolInterface, 2));
};


/** @param {?proto.WompattiService.WolInterface|undefined} value */
proto.WompattiService.CreateWolInterfaceResponse.prototype.setWolinterface = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.WompattiService.CreateWolInterfaceResponse.prototype.clearWolinterface = function() {
  this.setWolinterface(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.WompattiService.CreateWolInterfaceResponse.prototype.hasWolinterface = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.WompattiService.EditWolInterfaceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.WompattiService.EditWolInterfaceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.WompattiService.EditWolInterfaceRequest.displayName = 'proto.WompattiService.EditWolInterfaceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.WompattiService.EditWolInterfaceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.WompattiService.EditWolInterfaceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.WompattiService.EditWolInterfaceRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.WompattiService.EditWolInterfaceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    wolinterfaceid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ethernetinterfaceid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    mac: msg.getMac_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.WompattiService.EditWolInterfaceRequest}
 */
proto.WompattiService.EditWolInterfaceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.WompattiService.EditWolInterfaceRequest;
  return proto.WompattiService.EditWolInterfaceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.WompattiService.EditWolInterfaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.WompattiService.EditWolInterfaceRequest}
 */
proto.WompattiService.EditWolInterfaceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWolinterfaceid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEthernetinterfaceid(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMac(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.WompattiService.EditWolInterfaceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.WompattiService.EditWolInterfaceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.WompattiService.EditWolInterfaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.WompattiService.EditWolInterfaceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWolinterfaceid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getEthernetinterfaceid();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMac_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional uint32 wolInterfaceId = 1;
 * @return {number}
 */
proto.WompattiService.EditWolInterfaceRequest.prototype.getWolinterfaceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.WompattiService.EditWolInterfaceRequest.prototype.setWolinterfaceid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 ethernetInterfaceId = 2;
 * @return {number}
 */
proto.WompattiService.EditWolInterfaceRequest.prototype.getEthernetinterfaceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.WompattiService.EditWolInterfaceRequest.prototype.setEthernetinterfaceid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bytes mac = 3;
 * @return {!(string|Uint8Array)}
 */
proto.WompattiService.EditWolInterfaceRequest.prototype.getMac = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes mac = 3;
 * This is a type-conversion wrapper around `getMac()`
 * @return {string}
 */
proto.WompattiService.EditWolInterfaceRequest.prototype.getMac_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMac()));
};


/**
 * optional bytes mac = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMac()`
 * @return {!Uint8Array}
 */
proto.WompattiService.EditWolInterfaceRequest.prototype.getMac_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMac()));
};


/** @param {!(string|Uint8Array)} value */
proto.WompattiService.EditWolInterfaceRequest.prototype.setMac = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.WompattiService.EditWolInterfaceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.WompattiService.EditWolInterfaceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.WompattiService.EditWolInterfaceResponse.displayName = 'proto.WompattiService.EditWolInterfaceResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.WompattiService.EditWolInterfaceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.WompattiService.EditWolInterfaceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.WompattiService.EditWolInterfaceResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.WompattiService.EditWolInterfaceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0),
    wolinterface: (f = msg.getWolinterface()) && proto.WompattiService.WolInterface.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.WompattiService.EditWolInterfaceResponse}
 */
proto.WompattiService.EditWolInterfaceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.WompattiService.EditWolInterfaceResponse;
  return proto.WompattiService.EditWolInterfaceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.WompattiService.EditWolInterfaceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.WompattiService.EditWolInterfaceResponse}
 */
proto.WompattiService.EditWolInterfaceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.WompattiService.EditWolInterfaceResponse.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = new proto.WompattiService.WolInterface;
      reader.readMessage(value,proto.WompattiService.WolInterface.deserializeBinaryFromReader);
      msg.setWolinterface(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.WompattiService.EditWolInterfaceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.WompattiService.EditWolInterfaceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.WompattiService.EditWolInterfaceResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.WompattiService.EditWolInterfaceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getWolinterface();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.WompattiService.WolInterface.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.WompattiService.EditWolInterfaceResponse.State = {
  SUCCESS: 0,
  NOT_FOUND: 1
};

/**
 * optional State state = 1;
 * @return {!proto.WompattiService.EditWolInterfaceResponse.State}
 */
proto.WompattiService.EditWolInterfaceResponse.prototype.getState = function() {
  return /** @type {!proto.WompattiService.EditWolInterfaceResponse.State} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.WompattiService.EditWolInterfaceResponse.State} value */
proto.WompattiService.EditWolInterfaceResponse.prototype.setState = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional WolInterface wolInterface = 2;
 * @return {?proto.WompattiService.WolInterface}
 */
proto.WompattiService.EditWolInterfaceResponse.prototype.getWolinterface = function() {
  return /** @type{?proto.WompattiService.WolInterface} */ (
    jspb.Message.getWrapperField(this, proto.WompattiService.WolInterface, 2));
};


/** @param {?proto.WompattiService.WolInterface|undefined} value */
proto.WompattiService.EditWolInterfaceResponse.prototype.setWolinterface = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.WompattiService.EditWolInterfaceResponse.prototype.clearWolinterface = function() {
  this.setWolinterface(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.WompattiService.EditWolInterfaceResponse.prototype.hasWolinterface = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.WompattiService.RemoveWolInterfaceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.WompattiService.RemoveWolInterfaceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.WompattiService.RemoveWolInterfaceRequest.displayName = 'proto.WompattiService.RemoveWolInterfaceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.WompattiService.RemoveWolInterfaceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.WompattiService.RemoveWolInterfaceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.WompattiService.RemoveWolInterfaceRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.WompattiService.RemoveWolInterfaceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    wolinterfaceid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.WompattiService.RemoveWolInterfaceRequest}
 */
proto.WompattiService.RemoveWolInterfaceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.WompattiService.RemoveWolInterfaceRequest;
  return proto.WompattiService.RemoveWolInterfaceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.WompattiService.RemoveWolInterfaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.WompattiService.RemoveWolInterfaceRequest}
 */
proto.WompattiService.RemoveWolInterfaceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWolinterfaceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.WompattiService.RemoveWolInterfaceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.WompattiService.RemoveWolInterfaceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.WompattiService.RemoveWolInterfaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.WompattiService.RemoveWolInterfaceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWolinterfaceid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 wolInterfaceId = 1;
 * @return {number}
 */
proto.WompattiService.RemoveWolInterfaceRequest.prototype.getWolinterfaceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.WompattiService.RemoveWolInterfaceRequest.prototype.setWolinterfaceid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.WompattiService.RemoveWolInterfaceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.WompattiService.RemoveWolInterfaceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.WompattiService.RemoveWolInterfaceResponse.displayName = 'proto.WompattiService.RemoveWolInterfaceResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.WompattiService.RemoveWolInterfaceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.WompattiService.RemoveWolInterfaceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.WompattiService.RemoveWolInterfaceResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.WompattiService.RemoveWolInterfaceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.WompattiService.RemoveWolInterfaceResponse}
 */
proto.WompattiService.RemoveWolInterfaceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.WompattiService.RemoveWolInterfaceResponse;
  return proto.WompattiService.RemoveWolInterfaceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.WompattiService.RemoveWolInterfaceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.WompattiService.RemoveWolInterfaceResponse}
 */
proto.WompattiService.RemoveWolInterfaceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.WompattiService.RemoveWolInterfaceResponse.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.WompattiService.RemoveWolInterfaceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.WompattiService.RemoveWolInterfaceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.WompattiService.RemoveWolInterfaceResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.WompattiService.RemoveWolInterfaceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.WompattiService.RemoveWolInterfaceResponse.State = {
  SUCCESS: 0,
  NOT_FOUND: 1
};

/**
 * optional State state = 1;
 * @return {!proto.WompattiService.RemoveWolInterfaceResponse.State}
 */
proto.WompattiService.RemoveWolInterfaceResponse.prototype.getState = function() {
  return /** @type {!proto.WompattiService.RemoveWolInterfaceResponse.State} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.WompattiService.RemoveWolInterfaceResponse.State} value */
proto.WompattiService.RemoveWolInterfaceResponse.prototype.setState = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.WompattiService.ExecuteWolInterfaceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.WompattiService.ExecuteWolInterfaceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.WompattiService.ExecuteWolInterfaceRequest.displayName = 'proto.WompattiService.ExecuteWolInterfaceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.WompattiService.ExecuteWolInterfaceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.WompattiService.ExecuteWolInterfaceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.WompattiService.ExecuteWolInterfaceRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.WompattiService.ExecuteWolInterfaceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    wolinterfaceid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.WompattiService.ExecuteWolInterfaceRequest}
 */
proto.WompattiService.ExecuteWolInterfaceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.WompattiService.ExecuteWolInterfaceRequest;
  return proto.WompattiService.ExecuteWolInterfaceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.WompattiService.ExecuteWolInterfaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.WompattiService.ExecuteWolInterfaceRequest}
 */
proto.WompattiService.ExecuteWolInterfaceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWolinterfaceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.WompattiService.ExecuteWolInterfaceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.WompattiService.ExecuteWolInterfaceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.WompattiService.ExecuteWolInterfaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.WompattiService.ExecuteWolInterfaceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWolinterfaceid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 wolInterfaceId = 1;
 * @return {number}
 */
proto.WompattiService.ExecuteWolInterfaceRequest.prototype.getWolinterfaceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.WompattiService.ExecuteWolInterfaceRequest.prototype.setWolinterfaceid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.WompattiService.ExecuteWolInterfaceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.WompattiService.ExecuteWolInterfaceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.WompattiService.ExecuteWolInterfaceResponse.displayName = 'proto.WompattiService.ExecuteWolInterfaceResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.WompattiService.ExecuteWolInterfaceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.WompattiService.ExecuteWolInterfaceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.WompattiService.ExecuteWolInterfaceResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.WompattiService.ExecuteWolInterfaceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.WompattiService.ExecuteWolInterfaceResponse}
 */
proto.WompattiService.ExecuteWolInterfaceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.WompattiService.ExecuteWolInterfaceResponse;
  return proto.WompattiService.ExecuteWolInterfaceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.WompattiService.ExecuteWolInterfaceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.WompattiService.ExecuteWolInterfaceResponse}
 */
proto.WompattiService.ExecuteWolInterfaceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.WompattiService.ExecuteWolInterfaceResponse.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.WompattiService.ExecuteWolInterfaceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.WompattiService.ExecuteWolInterfaceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.WompattiService.ExecuteWolInterfaceResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.WompattiService.ExecuteWolInterfaceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.WompattiService.ExecuteWolInterfaceResponse.State = {
  SUCCESS: 0,
  NOT_FOUND: 1
};

/**
 * optional State state = 1;
 * @return {!proto.WompattiService.ExecuteWolInterfaceResponse.State}
 */
proto.WompattiService.ExecuteWolInterfaceResponse.prototype.getState = function() {
  return /** @type {!proto.WompattiService.ExecuteWolInterfaceResponse.State} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.WompattiService.ExecuteWolInterfaceResponse.State} value */
proto.WompattiService.ExecuteWolInterfaceResponse.prototype.setState = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.WompattiService.FetchWolInterfaceByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.WompattiService.FetchWolInterfaceByIdRequest.repeatedFields_, null);
};
goog.inherits(proto.WompattiService.FetchWolInterfaceByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.WompattiService.FetchWolInterfaceByIdRequest.displayName = 'proto.WompattiService.FetchWolInterfaceByIdRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.WompattiService.FetchWolInterfaceByIdRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.WompattiService.FetchWolInterfaceByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.WompattiService.FetchWolInterfaceByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.WompattiService.FetchWolInterfaceByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.WompattiService.FetchWolInterfaceByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    wolinterfaceidtList: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.WompattiService.FetchWolInterfaceByIdRequest}
 */
proto.WompattiService.FetchWolInterfaceByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.WompattiService.FetchWolInterfaceByIdRequest;
  return proto.WompattiService.FetchWolInterfaceByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.WompattiService.FetchWolInterfaceByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.WompattiService.FetchWolInterfaceByIdRequest}
 */
proto.WompattiService.FetchWolInterfaceByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array.<number>} */ (reader.readPackedUint32());
      msg.setWolinterfaceidtList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.WompattiService.FetchWolInterfaceByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.WompattiService.FetchWolInterfaceByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.WompattiService.FetchWolInterfaceByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.WompattiService.FetchWolInterfaceByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWolinterfaceidtList();
  if (f.length > 0) {
    writer.writePackedUint32(
      1,
      f
    );
  }
};


/**
 * repeated uint32 wolInterfaceIdt = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.WompattiService.FetchWolInterfaceByIdRequest.prototype.getWolinterfaceidtList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 1));
};


/** @param {!Array.<number>} value */
proto.WompattiService.FetchWolInterfaceByIdRequest.prototype.setWolinterfaceidtList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.WompattiService.FetchWolInterfaceByIdRequest.prototype.addWolinterfaceidt = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.WompattiService.FetchWolInterfaceByIdRequest.prototype.clearWolinterfaceidtList = function() {
  this.setWolinterfaceidtList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.WompattiService.FetchWolInterfaceByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.WompattiService.FetchWolInterfaceByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.WompattiService.FetchWolInterfaceByIdResponse.displayName = 'proto.WompattiService.FetchWolInterfaceByIdResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.WompattiService.FetchWolInterfaceByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.WompattiService.FetchWolInterfaceByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.WompattiService.FetchWolInterfaceByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.WompattiService.FetchWolInterfaceByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0),
    wolinterface: (f = msg.getWolinterface()) && proto.WompattiService.WolInterface.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.WompattiService.FetchWolInterfaceByIdResponse}
 */
proto.WompattiService.FetchWolInterfaceByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.WompattiService.FetchWolInterfaceByIdResponse;
  return proto.WompattiService.FetchWolInterfaceByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.WompattiService.FetchWolInterfaceByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.WompattiService.FetchWolInterfaceByIdResponse}
 */
proto.WompattiService.FetchWolInterfaceByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.WompattiService.FetchWolInterfaceByIdResponse.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = new proto.WompattiService.WolInterface;
      reader.readMessage(value,proto.WompattiService.WolInterface.deserializeBinaryFromReader);
      msg.setWolinterface(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.WompattiService.FetchWolInterfaceByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.WompattiService.FetchWolInterfaceByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.WompattiService.FetchWolInterfaceByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.WompattiService.FetchWolInterfaceByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getWolinterface();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.WompattiService.WolInterface.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.WompattiService.FetchWolInterfaceByIdResponse.State = {
  SUCCESS: 0,
  NOT_FOUND: 1
};

/**
 * optional State state = 1;
 * @return {!proto.WompattiService.FetchWolInterfaceByIdResponse.State}
 */
proto.WompattiService.FetchWolInterfaceByIdResponse.prototype.getState = function() {
  return /** @type {!proto.WompattiService.FetchWolInterfaceByIdResponse.State} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.WompattiService.FetchWolInterfaceByIdResponse.State} value */
proto.WompattiService.FetchWolInterfaceByIdResponse.prototype.setState = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional WolInterface wolInterface = 2;
 * @return {?proto.WompattiService.WolInterface}
 */
proto.WompattiService.FetchWolInterfaceByIdResponse.prototype.getWolinterface = function() {
  return /** @type{?proto.WompattiService.WolInterface} */ (
    jspb.Message.getWrapperField(this, proto.WompattiService.WolInterface, 2));
};


/** @param {?proto.WompattiService.WolInterface|undefined} value */
proto.WompattiService.FetchWolInterfaceByIdResponse.prototype.setWolinterface = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.WompattiService.FetchWolInterfaceByIdResponse.prototype.clearWolinterface = function() {
  this.setWolinterface(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.WompattiService.FetchWolInterfaceByIdResponse.prototype.hasWolinterface = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.WompattiService);
