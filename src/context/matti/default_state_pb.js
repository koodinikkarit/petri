/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var default_state_video_connection_pb = require('./default_state_video_connection_pb.js');
var default_state_kvm_connection_pb = require('./default_state_kvm_connection_pb.js');
goog.exportSymbol('proto.MattiService.CreateDefaultStateRequest', null, global);
goog.exportSymbol('proto.MattiService.CreateDefaultStateResponse', null, global);
goog.exportSymbol('proto.MattiService.DefaultState', null, global);
goog.exportSymbol('proto.MattiService.EditDefaultStateRequest', null, global);
goog.exportSymbol('proto.MattiService.EditDefaultStateResponse', null, global);
goog.exportSymbol('proto.MattiService.ExecuteDefaultStateRequest', null, global);
goog.exportSymbol('proto.MattiService.ExecuteDefaultStateResponse', null, global);
goog.exportSymbol('proto.MattiService.ExecuteDefaultStateResponse.State', null, global);
goog.exportSymbol('proto.MattiService.FetchDefaultStateByIdRequest', null, global);
goog.exportSymbol('proto.MattiService.FetchDefaultStateByIdResponse', null, global);
goog.exportSymbol('proto.MattiService.FetchDefaultStateBySlugRequest', null, global);
goog.exportSymbol('proto.MattiService.FetchDefaultStateBySlugResponse', null, global);
goog.exportSymbol('proto.MattiService.FetchDefaultStatesRequest', null, global);
goog.exportSymbol('proto.MattiService.InsertKvmConnectionToDefaultStateRequest', null, global);
goog.exportSymbol('proto.MattiService.InsertKvmConnectionToDefaultStateResponse', null, global);
goog.exportSymbol('proto.MattiService.InsertVideoConnectionToDefaultStateRequest', null, global);
goog.exportSymbol('proto.MattiService.InsertVideoConnectionToDefaultStateResponse', null, global);
goog.exportSymbol('proto.MattiService.RemoveDefaultStateRequest', null, global);
goog.exportSymbol('proto.MattiService.RemoveDefaultStateResponse', null, global);
goog.exportSymbol('proto.MattiService.RemoveDefaultStateResponse.State', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.DefaultState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.DefaultState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.DefaultState.displayName = 'proto.MattiService.DefaultState';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.DefaultState.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.DefaultState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.DefaultState} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.DefaultState.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    slug: jspb.Message.getFieldWithDefault(msg, 2, ""),
    matrixid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.DefaultState}
 */
proto.MattiService.DefaultState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.DefaultState;
  return proto.MattiService.DefaultState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.DefaultState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.DefaultState}
 */
proto.MattiService.DefaultState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMatrixid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.DefaultState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.DefaultState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.DefaultState} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.DefaultState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSlug();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMatrixid();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.MattiService.DefaultState.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.MattiService.DefaultState.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string slug = 2;
 * @return {string}
 */
proto.MattiService.DefaultState.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.MattiService.DefaultState.prototype.setSlug = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 matrixId = 3;
 * @return {number}
 */
proto.MattiService.DefaultState.prototype.getMatrixid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.MattiService.DefaultState.prototype.setMatrixid = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.FetchDefaultStatesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.FetchDefaultStatesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.FetchDefaultStatesRequest.displayName = 'proto.MattiService.FetchDefaultStatesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.FetchDefaultStatesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.FetchDefaultStatesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.FetchDefaultStatesRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.FetchDefaultStatesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.FetchDefaultStatesRequest}
 */
proto.MattiService.FetchDefaultStatesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.FetchDefaultStatesRequest;
  return proto.MattiService.FetchDefaultStatesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.FetchDefaultStatesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.FetchDefaultStatesRequest}
 */
proto.MattiService.FetchDefaultStatesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.FetchDefaultStatesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.FetchDefaultStatesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.FetchDefaultStatesRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.FetchDefaultStatesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 offset = 1;
 * @return {number}
 */
proto.MattiService.FetchDefaultStatesRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.MattiService.FetchDefaultStatesRequest.prototype.setOffset = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 limit = 2;
 * @return {number}
 */
proto.MattiService.FetchDefaultStatesRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.MattiService.FetchDefaultStatesRequest.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.FetchDefaultStateByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.FetchDefaultStateByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.FetchDefaultStateByIdRequest.displayName = 'proto.MattiService.FetchDefaultStateByIdRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.FetchDefaultStateByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.FetchDefaultStateByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.FetchDefaultStateByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.FetchDefaultStateByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstateid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.FetchDefaultStateByIdRequest}
 */
proto.MattiService.FetchDefaultStateByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.FetchDefaultStateByIdRequest;
  return proto.MattiService.FetchDefaultStateByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.FetchDefaultStateByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.FetchDefaultStateByIdRequest}
 */
proto.MattiService.FetchDefaultStateByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDefaultstateid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.FetchDefaultStateByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.FetchDefaultStateByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.FetchDefaultStateByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.FetchDefaultStateByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstateid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 defaultStateId = 1;
 * @return {number}
 */
proto.MattiService.FetchDefaultStateByIdRequest.prototype.getDefaultstateid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.MattiService.FetchDefaultStateByIdRequest.prototype.setDefaultstateid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.FetchDefaultStateByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.FetchDefaultStateByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.FetchDefaultStateByIdResponse.displayName = 'proto.MattiService.FetchDefaultStateByIdResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.FetchDefaultStateByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.FetchDefaultStateByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.FetchDefaultStateByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.FetchDefaultStateByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstate: (f = msg.getDefaultstate()) && proto.MattiService.DefaultState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.FetchDefaultStateByIdResponse}
 */
proto.MattiService.FetchDefaultStateByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.FetchDefaultStateByIdResponse;
  return proto.MattiService.FetchDefaultStateByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.FetchDefaultStateByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.FetchDefaultStateByIdResponse}
 */
proto.MattiService.FetchDefaultStateByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.MattiService.DefaultState;
      reader.readMessage(value,proto.MattiService.DefaultState.deserializeBinaryFromReader);
      msg.setDefaultstate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.FetchDefaultStateByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.FetchDefaultStateByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.FetchDefaultStateByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.FetchDefaultStateByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.MattiService.DefaultState.serializeBinaryToWriter
    );
  }
};


/**
 * optional DefaultState defaultState = 1;
 * @return {?proto.MattiService.DefaultState}
 */
proto.MattiService.FetchDefaultStateByIdResponse.prototype.getDefaultstate = function() {
  return /** @type{?proto.MattiService.DefaultState} */ (
    jspb.Message.getWrapperField(this, proto.MattiService.DefaultState, 1));
};


/** @param {?proto.MattiService.DefaultState|undefined} value */
proto.MattiService.FetchDefaultStateByIdResponse.prototype.setDefaultstate = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.MattiService.FetchDefaultStateByIdResponse.prototype.clearDefaultstate = function() {
  this.setDefaultstate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MattiService.FetchDefaultStateByIdResponse.prototype.hasDefaultstate = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.FetchDefaultStateBySlugRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.FetchDefaultStateBySlugRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.FetchDefaultStateBySlugRequest.displayName = 'proto.MattiService.FetchDefaultStateBySlugRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.FetchDefaultStateBySlugRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.FetchDefaultStateBySlugRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.FetchDefaultStateBySlugRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.FetchDefaultStateBySlugRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    slug: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.FetchDefaultStateBySlugRequest}
 */
proto.MattiService.FetchDefaultStateBySlugRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.FetchDefaultStateBySlugRequest;
  return proto.MattiService.FetchDefaultStateBySlugRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.FetchDefaultStateBySlugRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.FetchDefaultStateBySlugRequest}
 */
proto.MattiService.FetchDefaultStateBySlugRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.FetchDefaultStateBySlugRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.FetchDefaultStateBySlugRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.FetchDefaultStateBySlugRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.FetchDefaultStateBySlugRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlug();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string slug = 1;
 * @return {string}
 */
proto.MattiService.FetchDefaultStateBySlugRequest.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.MattiService.FetchDefaultStateBySlugRequest.prototype.setSlug = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.FetchDefaultStateBySlugResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.FetchDefaultStateBySlugResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.FetchDefaultStateBySlugResponse.displayName = 'proto.MattiService.FetchDefaultStateBySlugResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.FetchDefaultStateBySlugResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.FetchDefaultStateBySlugResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.FetchDefaultStateBySlugResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.FetchDefaultStateBySlugResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstate: (f = msg.getDefaultstate()) && proto.MattiService.DefaultState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.FetchDefaultStateBySlugResponse}
 */
proto.MattiService.FetchDefaultStateBySlugResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.FetchDefaultStateBySlugResponse;
  return proto.MattiService.FetchDefaultStateBySlugResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.FetchDefaultStateBySlugResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.FetchDefaultStateBySlugResponse}
 */
proto.MattiService.FetchDefaultStateBySlugResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.MattiService.DefaultState;
      reader.readMessage(value,proto.MattiService.DefaultState.deserializeBinaryFromReader);
      msg.setDefaultstate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.FetchDefaultStateBySlugResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.FetchDefaultStateBySlugResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.FetchDefaultStateBySlugResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.FetchDefaultStateBySlugResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.MattiService.DefaultState.serializeBinaryToWriter
    );
  }
};


/**
 * optional DefaultState defaultState = 1;
 * @return {?proto.MattiService.DefaultState}
 */
proto.MattiService.FetchDefaultStateBySlugResponse.prototype.getDefaultstate = function() {
  return /** @type{?proto.MattiService.DefaultState} */ (
    jspb.Message.getWrapperField(this, proto.MattiService.DefaultState, 1));
};


/** @param {?proto.MattiService.DefaultState|undefined} value */
proto.MattiService.FetchDefaultStateBySlugResponse.prototype.setDefaultstate = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.MattiService.FetchDefaultStateBySlugResponse.prototype.clearDefaultstate = function() {
  this.setDefaultstate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MattiService.FetchDefaultStateBySlugResponse.prototype.hasDefaultstate = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.CreateDefaultStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.CreateDefaultStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.CreateDefaultStateRequest.displayName = 'proto.MattiService.CreateDefaultStateRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.CreateDefaultStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.CreateDefaultStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.CreateDefaultStateRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.CreateDefaultStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    slug: jspb.Message.getFieldWithDefault(msg, 1, ""),
    matrixid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.CreateDefaultStateRequest}
 */
proto.MattiService.CreateDefaultStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.CreateDefaultStateRequest;
  return proto.MattiService.CreateDefaultStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.CreateDefaultStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.CreateDefaultStateRequest}
 */
proto.MattiService.CreateDefaultStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMatrixid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.CreateDefaultStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.CreateDefaultStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.CreateDefaultStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.CreateDefaultStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlug();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMatrixid();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string slug = 1;
 * @return {string}
 */
proto.MattiService.CreateDefaultStateRequest.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.MattiService.CreateDefaultStateRequest.prototype.setSlug = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 matrixId = 2;
 * @return {number}
 */
proto.MattiService.CreateDefaultStateRequest.prototype.getMatrixid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.MattiService.CreateDefaultStateRequest.prototype.setMatrixid = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.CreateDefaultStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.CreateDefaultStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.CreateDefaultStateResponse.displayName = 'proto.MattiService.CreateDefaultStateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.CreateDefaultStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.CreateDefaultStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.CreateDefaultStateResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.CreateDefaultStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstate: (f = msg.getDefaultstate()) && proto.MattiService.DefaultState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.CreateDefaultStateResponse}
 */
proto.MattiService.CreateDefaultStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.CreateDefaultStateResponse;
  return proto.MattiService.CreateDefaultStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.CreateDefaultStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.CreateDefaultStateResponse}
 */
proto.MattiService.CreateDefaultStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.MattiService.DefaultState;
      reader.readMessage(value,proto.MattiService.DefaultState.deserializeBinaryFromReader);
      msg.setDefaultstate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.CreateDefaultStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.CreateDefaultStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.CreateDefaultStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.CreateDefaultStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.MattiService.DefaultState.serializeBinaryToWriter
    );
  }
};


/**
 * optional DefaultState defaultState = 1;
 * @return {?proto.MattiService.DefaultState}
 */
proto.MattiService.CreateDefaultStateResponse.prototype.getDefaultstate = function() {
  return /** @type{?proto.MattiService.DefaultState} */ (
    jspb.Message.getWrapperField(this, proto.MattiService.DefaultState, 1));
};


/** @param {?proto.MattiService.DefaultState|undefined} value */
proto.MattiService.CreateDefaultStateResponse.prototype.setDefaultstate = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.MattiService.CreateDefaultStateResponse.prototype.clearDefaultstate = function() {
  this.setDefaultstate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MattiService.CreateDefaultStateResponse.prototype.hasDefaultstate = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.EditDefaultStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.EditDefaultStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.EditDefaultStateRequest.displayName = 'proto.MattiService.EditDefaultStateRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.EditDefaultStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.EditDefaultStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.EditDefaultStateRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.EditDefaultStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstateid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    slug: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.EditDefaultStateRequest}
 */
proto.MattiService.EditDefaultStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.EditDefaultStateRequest;
  return proto.MattiService.EditDefaultStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.EditDefaultStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.EditDefaultStateRequest}
 */
proto.MattiService.EditDefaultStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDefaultstateid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.EditDefaultStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.EditDefaultStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.EditDefaultStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.EditDefaultStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstateid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSlug();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 defaultStateId = 1;
 * @return {number}
 */
proto.MattiService.EditDefaultStateRequest.prototype.getDefaultstateid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.MattiService.EditDefaultStateRequest.prototype.setDefaultstateid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string slug = 2;
 * @return {string}
 */
proto.MattiService.EditDefaultStateRequest.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.MattiService.EditDefaultStateRequest.prototype.setSlug = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.EditDefaultStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.EditDefaultStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.EditDefaultStateResponse.displayName = 'proto.MattiService.EditDefaultStateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.EditDefaultStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.EditDefaultStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.EditDefaultStateResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.EditDefaultStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.EditDefaultStateResponse}
 */
proto.MattiService.EditDefaultStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.EditDefaultStateResponse;
  return proto.MattiService.EditDefaultStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.EditDefaultStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.EditDefaultStateResponse}
 */
proto.MattiService.EditDefaultStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.EditDefaultStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.EditDefaultStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.EditDefaultStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.EditDefaultStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.RemoveDefaultStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.RemoveDefaultStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.RemoveDefaultStateRequest.displayName = 'proto.MattiService.RemoveDefaultStateRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.RemoveDefaultStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.RemoveDefaultStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.RemoveDefaultStateRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.RemoveDefaultStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstateid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.RemoveDefaultStateRequest}
 */
proto.MattiService.RemoveDefaultStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.RemoveDefaultStateRequest;
  return proto.MattiService.RemoveDefaultStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.RemoveDefaultStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.RemoveDefaultStateRequest}
 */
proto.MattiService.RemoveDefaultStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDefaultstateid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.RemoveDefaultStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.RemoveDefaultStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.RemoveDefaultStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.RemoveDefaultStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstateid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 defaultStateId = 1;
 * @return {number}
 */
proto.MattiService.RemoveDefaultStateRequest.prototype.getDefaultstateid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.MattiService.RemoveDefaultStateRequest.prototype.setDefaultstateid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.RemoveDefaultStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.RemoveDefaultStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.RemoveDefaultStateResponse.displayName = 'proto.MattiService.RemoveDefaultStateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.RemoveDefaultStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.RemoveDefaultStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.RemoveDefaultStateResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.RemoveDefaultStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getFieldWithDefault(msg, 1, false),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.RemoveDefaultStateResponse}
 */
proto.MattiService.RemoveDefaultStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.RemoveDefaultStateResponse;
  return proto.MattiService.RemoveDefaultStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.RemoveDefaultStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.RemoveDefaultStateResponse}
 */
proto.MattiService.RemoveDefaultStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {!proto.MattiService.RemoveDefaultStateResponse.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.RemoveDefaultStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.RemoveDefaultStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.RemoveDefaultStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.RemoveDefaultStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.MattiService.RemoveDefaultStateResponse.State = {
  DEFAULT_STATE_REMOVED: 0,
  DEFAULT_STATE_NOT_FOUND: 1
};

/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.MattiService.RemoveDefaultStateResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.MattiService.RemoveDefaultStateResponse.prototype.setSuccess = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional State state = 2;
 * @return {!proto.MattiService.RemoveDefaultStateResponse.State}
 */
proto.MattiService.RemoveDefaultStateResponse.prototype.getState = function() {
  return /** @type {!proto.MattiService.RemoveDefaultStateResponse.State} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.MattiService.RemoveDefaultStateResponse.State} value */
proto.MattiService.RemoveDefaultStateResponse.prototype.setState = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.InsertVideoConnectionToDefaultStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.InsertVideoConnectionToDefaultStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.InsertVideoConnectionToDefaultStateRequest.displayName = 'proto.MattiService.InsertVideoConnectionToDefaultStateRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.InsertVideoConnectionToDefaultStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.InsertVideoConnectionToDefaultStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.InsertVideoConnectionToDefaultStateRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.InsertVideoConnectionToDefaultStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstateid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    conportid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cpuportid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.InsertVideoConnectionToDefaultStateRequest}
 */
proto.MattiService.InsertVideoConnectionToDefaultStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.InsertVideoConnectionToDefaultStateRequest;
  return proto.MattiService.InsertVideoConnectionToDefaultStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.InsertVideoConnectionToDefaultStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.InsertVideoConnectionToDefaultStateRequest}
 */
proto.MattiService.InsertVideoConnectionToDefaultStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDefaultstateid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setConportid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCpuportid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.InsertVideoConnectionToDefaultStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.InsertVideoConnectionToDefaultStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.InsertVideoConnectionToDefaultStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.InsertVideoConnectionToDefaultStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstateid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getConportid();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getCpuportid();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 defaultStateId = 1;
 * @return {number}
 */
proto.MattiService.InsertVideoConnectionToDefaultStateRequest.prototype.getDefaultstateid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.MattiService.InsertVideoConnectionToDefaultStateRequest.prototype.setDefaultstateid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 conPortId = 2;
 * @return {number}
 */
proto.MattiService.InsertVideoConnectionToDefaultStateRequest.prototype.getConportid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.MattiService.InsertVideoConnectionToDefaultStateRequest.prototype.setConportid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 cpuPortId = 3;
 * @return {number}
 */
proto.MattiService.InsertVideoConnectionToDefaultStateRequest.prototype.getCpuportid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.MattiService.InsertVideoConnectionToDefaultStateRequest.prototype.setCpuportid = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.InsertVideoConnectionToDefaultStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.InsertVideoConnectionToDefaultStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.InsertVideoConnectionToDefaultStateResponse.displayName = 'proto.MattiService.InsertVideoConnectionToDefaultStateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.InsertVideoConnectionToDefaultStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.InsertVideoConnectionToDefaultStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.InsertVideoConnectionToDefaultStateResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.InsertVideoConnectionToDefaultStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstatevideoconnection: (f = msg.getDefaultstatevideoconnection()) && default_state_video_connection_pb.DefaultStateVideoConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.InsertVideoConnectionToDefaultStateResponse}
 */
proto.MattiService.InsertVideoConnectionToDefaultStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.InsertVideoConnectionToDefaultStateResponse;
  return proto.MattiService.InsertVideoConnectionToDefaultStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.InsertVideoConnectionToDefaultStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.InsertVideoConnectionToDefaultStateResponse}
 */
proto.MattiService.InsertVideoConnectionToDefaultStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new default_state_video_connection_pb.DefaultStateVideoConnection;
      reader.readMessage(value,default_state_video_connection_pb.DefaultStateVideoConnection.deserializeBinaryFromReader);
      msg.setDefaultstatevideoconnection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.InsertVideoConnectionToDefaultStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.InsertVideoConnectionToDefaultStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.InsertVideoConnectionToDefaultStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.InsertVideoConnectionToDefaultStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstatevideoconnection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      default_state_video_connection_pb.DefaultStateVideoConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional DefaultStateVideoConnection defaultStateVideoConnection = 1;
 * @return {?proto.MattiService.DefaultStateVideoConnection}
 */
proto.MattiService.InsertVideoConnectionToDefaultStateResponse.prototype.getDefaultstatevideoconnection = function() {
  return /** @type{?proto.MattiService.DefaultStateVideoConnection} */ (
    jspb.Message.getWrapperField(this, default_state_video_connection_pb.DefaultStateVideoConnection, 1));
};


/** @param {?proto.MattiService.DefaultStateVideoConnection|undefined} value */
proto.MattiService.InsertVideoConnectionToDefaultStateResponse.prototype.setDefaultstatevideoconnection = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.MattiService.InsertVideoConnectionToDefaultStateResponse.prototype.clearDefaultstatevideoconnection = function() {
  this.setDefaultstatevideoconnection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MattiService.InsertVideoConnectionToDefaultStateResponse.prototype.hasDefaultstatevideoconnection = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.InsertKvmConnectionToDefaultStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.InsertKvmConnectionToDefaultStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.InsertKvmConnectionToDefaultStateRequest.displayName = 'proto.MattiService.InsertKvmConnectionToDefaultStateRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.InsertKvmConnectionToDefaultStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.InsertKvmConnectionToDefaultStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.InsertKvmConnectionToDefaultStateRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.InsertKvmConnectionToDefaultStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstateid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    conportid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cpuportid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.InsertKvmConnectionToDefaultStateRequest}
 */
proto.MattiService.InsertKvmConnectionToDefaultStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.InsertKvmConnectionToDefaultStateRequest;
  return proto.MattiService.InsertKvmConnectionToDefaultStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.InsertKvmConnectionToDefaultStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.InsertKvmConnectionToDefaultStateRequest}
 */
proto.MattiService.InsertKvmConnectionToDefaultStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDefaultstateid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setConportid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCpuportid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.InsertKvmConnectionToDefaultStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.InsertKvmConnectionToDefaultStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.InsertKvmConnectionToDefaultStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.InsertKvmConnectionToDefaultStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstateid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getConportid();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getCpuportid();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 defaultStateId = 1;
 * @return {number}
 */
proto.MattiService.InsertKvmConnectionToDefaultStateRequest.prototype.getDefaultstateid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.MattiService.InsertKvmConnectionToDefaultStateRequest.prototype.setDefaultstateid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 conPortId = 2;
 * @return {number}
 */
proto.MattiService.InsertKvmConnectionToDefaultStateRequest.prototype.getConportid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.MattiService.InsertKvmConnectionToDefaultStateRequest.prototype.setConportid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 cpuPortId = 3;
 * @return {number}
 */
proto.MattiService.InsertKvmConnectionToDefaultStateRequest.prototype.getCpuportid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.MattiService.InsertKvmConnectionToDefaultStateRequest.prototype.setCpuportid = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.InsertKvmConnectionToDefaultStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.InsertKvmConnectionToDefaultStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.InsertKvmConnectionToDefaultStateResponse.displayName = 'proto.MattiService.InsertKvmConnectionToDefaultStateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.InsertKvmConnectionToDefaultStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.InsertKvmConnectionToDefaultStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.InsertKvmConnectionToDefaultStateResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.InsertKvmConnectionToDefaultStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstatekwmconnection: (f = msg.getDefaultstatekwmconnection()) && default_state_kvm_connection_pb.DefaultStateKvmConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.InsertKvmConnectionToDefaultStateResponse}
 */
proto.MattiService.InsertKvmConnectionToDefaultStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.InsertKvmConnectionToDefaultStateResponse;
  return proto.MattiService.InsertKvmConnectionToDefaultStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.InsertKvmConnectionToDefaultStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.InsertKvmConnectionToDefaultStateResponse}
 */
proto.MattiService.InsertKvmConnectionToDefaultStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new default_state_kvm_connection_pb.DefaultStateKvmConnection;
      reader.readMessage(value,default_state_kvm_connection_pb.DefaultStateKvmConnection.deserializeBinaryFromReader);
      msg.setDefaultstatekwmconnection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.InsertKvmConnectionToDefaultStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.InsertKvmConnectionToDefaultStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.InsertKvmConnectionToDefaultStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.InsertKvmConnectionToDefaultStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstatekwmconnection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      default_state_kvm_connection_pb.DefaultStateKvmConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional DefaultStateKvmConnection defaultStateKwmConnection = 1;
 * @return {?proto.MattiService.DefaultStateKvmConnection}
 */
proto.MattiService.InsertKvmConnectionToDefaultStateResponse.prototype.getDefaultstatekwmconnection = function() {
  return /** @type{?proto.MattiService.DefaultStateKvmConnection} */ (
    jspb.Message.getWrapperField(this, default_state_kvm_connection_pb.DefaultStateKvmConnection, 1));
};


/** @param {?proto.MattiService.DefaultStateKvmConnection|undefined} value */
proto.MattiService.InsertKvmConnectionToDefaultStateResponse.prototype.setDefaultstatekwmconnection = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.MattiService.InsertKvmConnectionToDefaultStateResponse.prototype.clearDefaultstatekwmconnection = function() {
  this.setDefaultstatekwmconnection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MattiService.InsertKvmConnectionToDefaultStateResponse.prototype.hasDefaultstatekwmconnection = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.ExecuteDefaultStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.ExecuteDefaultStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.ExecuteDefaultStateRequest.displayName = 'proto.MattiService.ExecuteDefaultStateRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.ExecuteDefaultStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.ExecuteDefaultStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.ExecuteDefaultStateRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.ExecuteDefaultStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultstateid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.ExecuteDefaultStateRequest}
 */
proto.MattiService.ExecuteDefaultStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.ExecuteDefaultStateRequest;
  return proto.MattiService.ExecuteDefaultStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.ExecuteDefaultStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.ExecuteDefaultStateRequest}
 */
proto.MattiService.ExecuteDefaultStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDefaultstateid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.ExecuteDefaultStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.ExecuteDefaultStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.ExecuteDefaultStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.ExecuteDefaultStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultstateid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 defaultStateId = 1;
 * @return {number}
 */
proto.MattiService.ExecuteDefaultStateRequest.prototype.getDefaultstateid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.MattiService.ExecuteDefaultStateRequest.prototype.setDefaultstateid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MattiService.ExecuteDefaultStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MattiService.ExecuteDefaultStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.MattiService.ExecuteDefaultStateResponse.displayName = 'proto.MattiService.ExecuteDefaultStateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MattiService.ExecuteDefaultStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.MattiService.ExecuteDefaultStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MattiService.ExecuteDefaultStateResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.MattiService.ExecuteDefaultStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getFieldWithDefault(msg, 1, false),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MattiService.ExecuteDefaultStateResponse}
 */
proto.MattiService.ExecuteDefaultStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MattiService.ExecuteDefaultStateResponse;
  return proto.MattiService.ExecuteDefaultStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MattiService.ExecuteDefaultStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MattiService.ExecuteDefaultStateResponse}
 */
proto.MattiService.ExecuteDefaultStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {!proto.MattiService.ExecuteDefaultStateResponse.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MattiService.ExecuteDefaultStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MattiService.ExecuteDefaultStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MattiService.ExecuteDefaultStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.MattiService.ExecuteDefaultStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.MattiService.ExecuteDefaultStateResponse.State = {
  DEFAULT_STATE_EXECUTED: 0,
  DEFAULT_STATE_NOT_FOUND: 1
};

/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.MattiService.ExecuteDefaultStateResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.MattiService.ExecuteDefaultStateResponse.prototype.setSuccess = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional State state = 2;
 * @return {!proto.MattiService.ExecuteDefaultStateResponse.State}
 */
proto.MattiService.ExecuteDefaultStateResponse.prototype.getState = function() {
  return /** @type {!proto.MattiService.ExecuteDefaultStateResponse.State} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.MattiService.ExecuteDefaultStateResponse.State} value */
proto.MattiService.ExecuteDefaultStateResponse.prototype.setState = function(value) {
  jspb.Message.setField(this, 2, value);
};


goog.object.extend(exports, proto.MattiService);
